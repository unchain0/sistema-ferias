// Script para testar conex√£o com banco de dados
// Execute: node scripts/test-db-connection.js

const fs = require('fs');
const path = require('path');

// Ler .env.local manualmente
let supabaseUrl = '';
let supabaseKey = '';

try {
  const envPath = path.join(__dirname, '..', '.env.local');
  const envContent = fs.readFileSync(envPath, 'utf8');
  
  envContent.split('\n').forEach(line => {
    if (line.startsWith('NEXT_PUBLIC_SUPABASE_URL=')) {
      supabaseUrl = line.split('=')[1].trim();
    }
    if (line.startsWith('NEXT_PUBLIC_SUPABASE_ANON_KEY=')) {
      supabaseKey = line.split('=')[1].trim();
    }
  });
} catch (err) {
  // .env.local n√£o existe ou n√£o pode ser lido
}

console.log('üîç Testando configura√ß√£o do banco de dados...\n');

if (!supabaseUrl || !supabaseKey) {
  console.log('‚ùå PROBLEMA: Vari√°veis do Supabase n√£o configuradas!');
  console.log('');
  console.log('Verifique se .env.local cont√©m:');
  console.log('  - NEXT_PUBLIC_SUPABASE_URL');
  console.log('  - NEXT_PUBLIC_SUPABASE_ANON_KEY');
  console.log('');
  console.log('‚û°Ô∏è  Sistema usar√°: ARMAZENAMENTO EM MEM√ìRIA (dados ser√£o perdidos!)');
  process.exit(1);
}

console.log('‚úÖ Vari√°veis de ambiente configuradas:');
console.log(`   URL: ${supabaseUrl.substring(0, 30)}...`);
console.log(`   Key: ${supabaseKey.substring(0, 30)}...`);
console.log('');
console.log('‚û°Ô∏è  Sistema usar√°: SUPABASE (dados persistentes!)');
console.log('');
console.log('üéâ Tudo certo! Seus dados ser√£o salvos no Supabase.');
